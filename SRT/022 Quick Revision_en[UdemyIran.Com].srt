1
00:00:00,360 --> 00:00:05,850
So in this video, we'll just go to the entire code very quickly so that you understand all of this

2
00:00:06,600 --> 00:00:09,720
and guess you understand all of this code already.

3
00:00:09,750 --> 00:00:11,910
You don't need to go through the don't go with me.

4
00:00:12,180 --> 00:00:18,720
You can skip to the next video, but in case you didn't understand some things, this is a great video

5
00:00:18,720 --> 00:00:20,400
for you to just go over everything quickly.

6
00:00:21,390 --> 00:00:23,340
So we have two files here.

7
00:00:24,090 --> 00:00:25,410
The first file is may not go.

8
00:00:25,680 --> 00:00:31,860
It has the func main, which is the most important function in our whole anxiety project.

9
00:00:34,290 --> 00:00:39,330
So the function basically has good nutrition support function is basically calling that getting additional

10
00:00:39,330 --> 00:00:46,530
support function, the nutritional score function, basically tons of value of how good or basically

11
00:00:46,530 --> 00:00:50,640
a total score of a food product that you have consumed.

12
00:00:51,270 --> 00:00:57,330
Now the user who's going to be using this kind of a nutrition calculator is going to get all this information

13
00:00:57,330 --> 00:00:59,040
on the food label that he consumes.

14
00:01:00,130 --> 00:01:02,710
Or approximated levels.

15
00:01:03,280 --> 00:01:06,100
Like, let's say if you consume something, you can just Google that.

16
00:01:06,100 --> 00:01:06,640
You know what?

17
00:01:06,640 --> 00:01:14,230
I'll tell you what I'll thinks that basically that, you know, food product consists of.

18
00:01:16,030 --> 00:01:22,420
So here we are accepting these values like energy sugars, saturated fatty acids, sodium foods, fiber

19
00:01:22,420 --> 00:01:25,150
protein, food, fiber and protein.

20
00:01:25,720 --> 00:01:34,390
And we are using a very popular and you just got here to based on the scientific journal which processes

21
00:01:34,390 --> 00:01:35,530
these items.

22
00:01:35,800 --> 00:01:40,360
Now there are multiple more things that a food item could consist of, but we just considering these

23
00:01:40,360 --> 00:01:40,630
ones.

24
00:01:41,260 --> 00:01:48,520
So there are some things like SFE and sodium rich and sugars which could be negative, right, for or

25
00:01:48,520 --> 00:01:51,370
detrimental to the progress that the person is making.

26
00:01:51,370 --> 00:01:55,960
Having a good diet and some things like fruits, fiber and protein are considered to be good in the

27
00:01:55,960 --> 00:01:59,170
sense the more the food item has, the better they're considered.

28
00:01:59,170 --> 00:02:04,480
So that's why these values are going to be given a positive value.

29
00:02:04,900 --> 00:02:06,340
These are going to be given negative value.

30
00:02:07,090 --> 00:02:13,990
And at the end, what you'll get will be a total score, which field subtract negative and positive.

31
00:02:16,100 --> 00:02:18,920
Then you are passing here something called this food.

32
00:02:20,000 --> 00:02:22,660
It's because food can be of multiple types.

33
00:02:22,790 --> 00:02:25,970
It could be food, beverage, water, energy.

34
00:02:26,210 --> 00:02:32,880
And they all have different ways of calculating their nutritional content based on scientific general.

35
00:02:32,900 --> 00:02:36,110
So that's why we considered four different items instead of just considering food.

36
00:02:37,460 --> 00:02:41,120
Now, the nutritional score that we need, like I said, is going to have a value to have positive and

37
00:02:41,120 --> 00:02:44,990
negative, going to have a score type, score type being these four ones.

38
00:02:47,240 --> 00:02:53,420
Then we have defined our own floats, our own types for energy, kilojoules, ground.

39
00:02:53,840 --> 00:02:59,140
These are the different standardised units that would be would need to operate.

40
00:03:00,080 --> 00:03:03,710
So for example, if you have

41
00:03:06,350 --> 00:03:12,560
sodium light, you will pass this function, sodium, salt and mg.

42
00:03:12,710 --> 00:03:15,320
And from that salt, you will get the amount of sodium and.

43
00:03:16,870 --> 00:03:16,960
Yeah.

44
00:03:17,050 --> 00:03:23,170
Because you will pass salt and you'll get sodium from that salt.

45
00:03:24,010 --> 00:03:33,540
Similarly in energy from kilograms because you will pass kilocalories here but you will get back kilojoules

46
00:03:33,550 --> 00:03:35,110
so that's change this actually make it.

47
00:03:36,060 --> 00:03:43,970
100, but you'll get back energy kilojoules, which is like the standard for calculating the energy.

48
00:03:45,230 --> 00:03:51,680
Then we have created something called the nutritional data and this is the nutritional data that the

49
00:03:51,680 --> 00:03:52,370
user would be entering.

50
00:03:52,400 --> 00:03:58,250
So if you see out here, you see this word called nutritional data because this is what the user is

51
00:03:58,250 --> 00:04:00,290
going to be entering all these different things.

52
00:04:01,710 --> 00:04:02,070
Okay.

53
00:04:03,360 --> 00:04:08,510
And so we have defined our own types and then we have defined our own methods.

54
00:04:08,510 --> 00:04:13,230
So these are separate methods called get points, methods for each of these things.

55
00:04:13,230 --> 00:04:14,820
So energy has a separate get point method.

56
00:04:15,300 --> 00:04:20,190
Sugar has a separate good point method, SFE has a different get, sodium has a different get points

57
00:04:20,190 --> 00:04:20,519
method.

58
00:04:21,240 --> 00:04:23,840
So does fruit and so does fiber input.

59
00:04:25,410 --> 00:04:29,640
Now, when you go to the get nutrition score function, which is being called from mean not cool, you

60
00:04:29,640 --> 00:04:33,150
see that we have taken three variables value positive, negative.

61
00:04:33,150 --> 00:04:34,080
All three of them are zero.

62
00:04:34,740 --> 00:04:39,330
The first thing that we have checked is if the score type that we have received in this function and

63
00:04:39,430 --> 00:04:44,820
we get nutrition data, which is this, and we get the score type, which is this stock, which in this

64
00:04:44,820 --> 00:04:45,420
case is food.

65
00:04:46,440 --> 00:04:48,360
So we check if it's not water.

66
00:04:48,360 --> 00:04:52,680
If it's not water, then we actually calculate the food fiber and negative and positive because for

67
00:04:52,680 --> 00:04:55,170
water you won't have good food.

68
00:04:55,170 --> 00:04:59,670
And I would point state that's why for you checking if it's for water or not.

69
00:05:00,900 --> 00:05:07,680
If it's not but it's not for water, that means the things that are not water all get impurities.

70
00:05:07,680 --> 00:05:12,030
And this could block that means food, cheese and beverage.

71
00:05:12,180 --> 00:05:13,410
So you want to check for that one?

72
00:05:13,410 --> 00:05:14,430
So you want to check for cheese?

73
00:05:15,210 --> 00:05:16,740
What will be the value?

74
00:05:17,310 --> 00:05:17,610
Right.

75
00:05:17,610 --> 00:05:23,400
And you want to check for when to check if a negative is greater than 11 through pointless and five,

76
00:05:23,400 --> 00:05:25,200
then you can create a different type of value.

77
00:05:25,800 --> 00:05:28,140
Otherwise the standard value is negative minus positive.

78
00:05:29,100 --> 00:05:32,700
Okay, so these are these four steps are common.

79
00:05:32,700 --> 00:05:38,460
You check create the food and five equating to negative positive you'll carpet and these are specific

80
00:05:38,460 --> 00:05:39,720
to the food type.

81
00:05:39,750 --> 00:05:44,010
Now like I said, you know these values, you don't have to keep these calculations like this the way

82
00:05:44,010 --> 00:05:44,550
I've kept them.

83
00:05:44,790 --> 00:05:48,330
These are just recommendations from the Food Journal that we are following, the scientific journal

84
00:05:48,330 --> 00:05:48,900
that we are following.

85
00:05:49,350 --> 00:05:52,910
You can feel free to change these values and all will be okay.

86
00:05:54,330 --> 00:05:58,380
Now you can see that there are these get points functions that you're calling for separately for food,

87
00:05:58,380 --> 00:06:02,280
fiber, energy, sugars, and that's because we have already created these functions here.

88
00:06:03,450 --> 00:06:05,790
Now to be able to get points, points, basically.

89
00:06:06,420 --> 00:06:13,710
I showed you that table in the in the scientific journal that from basically from for sodium, you'll

90
00:06:13,710 --> 00:06:14,940
get some points for SFE.

91
00:06:14,940 --> 00:06:15,840
You get some points.

92
00:06:16,380 --> 00:06:18,480
The points are based on that table.

93
00:06:18,810 --> 00:06:20,700
Right, and will be based on these steps.

94
00:06:20,700 --> 00:06:25,710
So to be able to calculate energy, sugar, SFA, sodium, fiber, plotting levels, we'll have to create

95
00:06:25,710 --> 00:06:28,010
these different steps or just different steps.

96
00:06:29,160 --> 00:06:37,140
These steps are official steps mentioned in the journal and based on them we can calculate the points

97
00:06:37,140 --> 00:06:40,350
or the amount of energy or amount of sugar.

98
00:06:40,470 --> 00:06:41,280
Is there the food?

99
00:06:42,870 --> 00:06:43,410
To do that.

100
00:06:43,410 --> 00:06:49,470
We have this function called get points from range, which takes in the value and takes the amount of

101
00:06:49,470 --> 00:06:54,420
steps and then it finds out based on the steps, the actual value that's are done here.

102
00:06:54,870 --> 00:07:01,230
So for all of these all of these values like foods, fiber, energy, sugars, all of those points are

103
00:07:01,230 --> 00:07:01,440
done.

104
00:07:01,440 --> 00:07:04,530
And then you have I would define positive or negative basically from that.

105
00:07:06,240 --> 00:07:07,800
And then what are you returning from this function?

106
00:07:07,800 --> 00:07:12,540
The nutritional score function is this nutrition score struct, which can have value, positive or negative

107
00:07:12,540 --> 00:07:13,020
in squatting.

108
00:07:14,190 --> 00:07:17,370
Now, you could end here, but we have gone one step further.

109
00:07:17,370 --> 00:07:18,720
What you've done is for fruits.

110
00:07:18,720 --> 00:07:22,310
We have not used the get points from this function.

111
00:07:22,330 --> 00:07:24,930
We have created a separate logic.

112
00:07:25,710 --> 00:07:26,370
We didn't have to.

113
00:07:26,370 --> 00:07:28,290
It's completely option, but we created a separate logic.

114
00:07:28,890 --> 00:07:31,680
And this logic also we could keep in a separate function.

115
00:07:31,680 --> 00:07:37,230
But since only this get points for fruit, percentage uses and assumptions have kept this code and leave

116
00:07:37,240 --> 00:07:37,800
this function.

117
00:07:38,580 --> 00:07:43,590
So now after this, everything is optional and the sense we create.

118
00:07:43,590 --> 00:07:45,930
We calculated one more thing called get nutri score.

119
00:07:46,770 --> 00:07:50,640
If you're not just happy with just the value, getting just the value of doesn't score and you want

120
00:07:50,640 --> 00:07:59,010
a green like for example ABCD, then you would do these next steps which is basically creating this

121
00:07:59,790 --> 00:08:01,290
slice called squad letter.

122
00:08:01,800 --> 00:08:09,300
It would have a, B, C, D, E and let's get new discourse function is then again called from mean.

123
00:08:09,640 --> 00:08:11,550
So the second line is calling this function.

124
00:08:11,580 --> 00:08:12,450
It's completely optional.

125
00:08:14,250 --> 00:08:19,560
So when you call the get new discourse function or the method you are, it's it's a method, right of

126
00:08:19,560 --> 00:08:21,320
type and it's a neutral score.

127
00:08:21,340 --> 00:08:25,950
So as you can see hosting and start getting a score because it's a metric.

128
00:08:27,000 --> 00:08:30,900
So you're checking for food, checking for water and for everything else.

129
00:08:31,320 --> 00:08:33,090
You're passing something for food.

130
00:08:33,090 --> 00:08:40,049
You pass your you're saying scored later is that slice of obesity and inside that to get the value of

131
00:08:40,049 --> 00:08:45,930
the index you are calling the get score the get went from change function here you'll pass the value

132
00:08:45,930 --> 00:08:50,460
that got calculated here and the get nutrition squat function and you're passing these steps again,

133
00:08:50,460 --> 00:08:53,040
official steps that have been given to us by the sign for gym.

134
00:08:54,510 --> 00:08:56,280
So for food we do like this for water.

135
00:08:56,280 --> 00:09:03,750
We said zero because we want a right because that the zeroth index, you have a grid as you can see

136
00:09:03,840 --> 00:09:13,500
from school later the degree that the zeroth index and you'll get for everything else which is not food

137
00:09:13,500 --> 00:09:16,800
and water, you will have these dips.

138
00:09:17,820 --> 00:09:18,060
Right.

139
00:09:18,810 --> 00:09:21,750
So I just want to take you through the entire program once again.

140
00:09:22,050 --> 00:09:26,280
And the quote will obviously will be with you now in the next video.

141
00:09:26,280 --> 00:09:30,830
We just want to test our program and see if everything is okay and fix any issues come.

142
00:09:31,260 --> 00:09:36,990
But since we have used those extensions and everything was was getting caught, all the issues were

143
00:09:36,990 --> 00:09:39,330
getting caught while we were typing the code.

144
00:09:39,330 --> 00:09:40,800
So I don't think there should be much issues.

